{"ast":null,"code":"import axios from \"axios\";\nvar BASEURL = \"https://www.googleapis.com/books/v1/volumes?q=\";\nexport default {\n  // Export an object with a \"search\" method that searches the Google Books API for the passed query\n  search: function search(query) {\n    console.log(\"GooogleAPI call\", query);\n    return axios.get(BASEURL + query);\n  },\n  // Gets all books\n  getAllBooks: function getAllBooks() {\n    console.log(\"Retrieving all books\");\n    return axios.get(\"api/books\");\n  },\n  // Gets authorization\n  getAuthorized: function getAuthorized() {\n    console.log(\"Authorization function not yet built!\");\n    return axios.post(\"/api/login\");\n  },\n  // Gets the book with the given id\n  getBook: function getBook(id) {\n    console.log(\"id\", id);\n    return axios.get(\"/api/books/\\\" \".concat(id));\n  },\n  // Deletes the book with the given id\n  deleteBook: function deleteBook(id) {\n    console.log(\"Book Deleted from DB\");\n    return axios.delete(\"/api/books/\\\" \".concat(id));\n  },\n  // Creates an instance of book in the db\n  addBookToDB: function addBookToDB(bookData) {\n    console.log(\"Book Added to DB\");\n    return axios.post(\"/api/books\", bookData);\n  }\n};","map":{"version":3,"sources":["/Users/ranton/bootcamp/sandbox/homework/Booksearch/client/src/utils/API.js"],"names":["axios","BASEURL","search","query","console","log","get","getAllBooks","getAuthorized","post","getBook","id","deleteBook","delete","addBookToDB","bookData"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,IAAMC,OAAO,GAAG,gDAAhB;AAEA,eAAe;AACb;AAEAC,EAAAA,MAAM,EAAE,gBAACC,KAAD,EAAW;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,KAA/B;AACA,WAAOH,KAAK,CAACM,GAAN,CAAUL,OAAO,GAAGE,KAApB,CAAP;AACD,GANY;AAOb;AACAI,EAAAA,WAAW,EAAE,uBAAK;AAChBH,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,WAAOL,KAAK,CAACM,GAAN,CAAU,WAAV,CAAP;AACD,GAXY;AAYb;AACAE,EAAAA,aAAa,EAAE,yBAAM;AACnBJ,IAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ;AACA,WAAOL,KAAK,CAACS,IAAN,CAAW,YAAX,CAAP;AACD,GAhBY;AAiBb;AACAC,EAAAA,OAAO,EAAE,iBAACC,EAAD,EAAQ;AACfP,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBM,EAAlB;AACA,WAAOX,KAAK,CAACM,GAAN,yBAA0BK,EAA1B,EAAP;AACD,GArBY;AAsBb;AACAC,EAAAA,UAAU,EAAG,oBAACD,EAAD,EAAQ;AACnBP,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,WAAOL,KAAK,CAACa,MAAN,yBAA6BF,EAA7B,EAAP;AACD,GA1BY;AA2Bb;AACAG,EAAAA,WAAW,EAAE,qBAACC,QAAD,EAAc;AACzBX,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,WAAOL,KAAK,CAACS,IAAN,CAAW,YAAX,EAAyBM,QAAzB,CAAP;AACD;AA/BY,CAAf","sourcesContent":["import axios from \"axios\";\nconst BASEURL = \"https://www.googleapis.com/books/v1/volumes?q=\";\n\nexport default {\n  // Export an object with a \"search\" method that searches the Google Books API for the passed query\n\n  search: (query) => {\n    console.log(\"GooogleAPI call\", query);\n    return axios.get(BASEURL + query);\n  },\n  // Gets all books\n  getAllBooks: ()=> {\n    console.log(\"Retrieving all books\")\n    return axios.get(\"api/books\");\n  },\n  // Gets authorization\n  getAuthorized: () => {\n    console.log(\"Authorization function not yet built!\")\n    return axios.post(\"/api/login\");\n  },\n  // Gets the book with the given id\n  getBook: (id) => {\n    console.log(\"id\", id);\n    return axios.get(`/api/books/\" ${id}`);\n  },\n  // Deletes the book with the given id\n  deleteBook:  (id) => {\n    console.log(\"Book Deleted from DB\");\n    return axios.delete(`/api/books/\" ${id}`);\n  },\n  // Creates an instance of book in the db\n  addBookToDB: (bookData) => {\n    console.log(\"Book Added to DB\");\n    return axios.post(\"/api/books\", bookData);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}