{"ast":null,"code":"var db = require(\"../models\"); // Defining methods for the booksController\n\n\nmodule.exports = {\n  findAll: function findAll(req, res) {\n    db.Book.find(req.query).sort({\n      date: -1\n    }).then(function (dbModel) {\n      return res.json(dbModel);\n    }).catch(function (err) {\n      return res.status(422).json(err);\n    });\n  },\n  findById: function findById(req, res) {\n    console.log(req.params.id);\n    db.Book.find({\n      title: req.params.id\n    }).then(function (dbModel) {\n      return res.json(dbModel);\n    }).catch(function (err) {\n      return res.status(422).json(err);\n    });\n  },\n  create: function create(req, res) {\n    db.Book.create(req.body).then(function (dbModel) {\n      return res.json(dbModel);\n    }).catch(function (err) {\n      return res.status(422).json(err);\n    });\n  },\n  update: function update(req, res) {\n    db.Book.findOneAndUpdate({\n      _id: req.params.id\n    }, req.body).then(function (dbModel) {\n      return res.json(dbModel);\n    }).catch(function (err) {\n      return res.status(422).json(err);\n    });\n  },\n  remove: function remove(req, res) {\n    db.Book.findById({\n      _id: req.params.id\n    }).then(function (dbModel) {\n      return dbModel.remove();\n    }).then(function (dbModel) {\n      return res.json(dbModel);\n    }).catch(function (err) {\n      return res.status(422).json(err);\n    });\n  }\n};","map":null,"metadata":{},"sourceType":"script"}